{"status":"ok","count":5,"count_total":15,"pages":3,"posts":[{"id":10,"type":"blog_post","slug":"the-first-build","url":"http:\/\/blog.jeremyclewell.com\/?blog_post=the-first-build","status":"publish","title":"The first build","title_plain":"The first build","content":"<p>So I was ready for my first build to the iPhone! I have to say that building to the device from Unity is ridiculously easy. Within minutes I had a working prototype running on my phone and while I was excited to see it come alive, it was also a very sobering experience realizing how much work there was left to do. I had built a stand-in menu system using default Unity GUI objects and decided to let work on the menus halt for now so I could focus on building the levels themselves.<\/p>\n<p>Keep in mind as you read this that while I do have a background in art and I can handle my own with Python and a few other interpreted languages, I am in no way an expert. This is my first attempt at building a game outside of the Flash runtime and by far the largest gaming project I&#8217;ve ever attempted. I&#8217;m assuming that everything I&#8217;ve done so far has probably been wrong and I&#8217;m sure there are a hundred easier ways to do what I&#8217;m trying to do. <img src='http:\/\/blog.jeremyclewell.com\/wp-includes\/images\/smilies\/icon_smile.gif' alt=':)' class='wp-smiley' \/>  Any constructive criticism would be greatly appreciated! If you&#8217;re reading this as a guide to build your own game, god help you&#8230;I would consult a professional first.<\/p>\n<p><a class=\"unityLinkBox\" title=\"First fully modeled level\"><img src=\"\/storage\/post-images\/level1TN.jpg\" alt=\"\" \/><\/a>Anyway, my first level was complete (click the thumbnail to open the level in the Unity plugin), albeit with out any textures. I began to see all of the gameplay elements that were missing. I was killing off the player if he hit an object too hard or if his speed dropped below a simulated 3 mph, yet I had no way of re-spawning the user back into gameplay. Secondly, while I had built the level as carefully as I could have, testing every polygon I added, the flow of the game still didn&#8217;t feel right. If you came off a jump and lost some speed, you could roll along at a boring 4 mph until the incline of the hill increased enough for you to pick up momentum again. Conversely, if you were playing really well, you could pick up so much speed that the level became unplayable. Lastly, what the heck was the point of the game? How do you win? Is making it to the bottom of the hill enough, or should I add some type of point accumulation system? Should there be a time limit? Penalties for crashing? At this point the game felt more like a snowboarding game than anything else, but with cheese, so I picked up a copy of one of my old favorites <a href=\"http:\/\/en.wikipedia.org\/wiki\/1080\u00b0_Snowboarding\" target=\"_blank\">1080 Snowboarding for the N64<\/a>. I played for a while, trying to figure out why it had such an addictive\u00a0gameplay model and I think I gleaned a few ideas from the old classic. Challenge and reward should be the primary impetus&#8230;as it is with most all games, but while Cooper&#8217;s Hill had the challenge, reward was sorely lacking.<\/p>\n<p><a title=\"Respawn points along the optimal path\" href=\"\/storage\/post-images\/respawn_points.png\" rel=\"images\"><img style=\"width: 150px;\" src=\"\/storage\/post-images\/respawn_points.png\" alt=\"\" \/><\/a><span class=\"thumbnail-caption\" style=\"width: 150px;\">Respawn points tracking the optimal line down the course.<\/span><br \/>\n<br \/>I set out to address these issues, the first of which being how to get the player back into the game after they had crashed. My first thought was to track the player&#8217;s progress down the hill and quite literally rewind their position to a point a few seconds before they wiped out. This posed a few problems though. If the player was at a point where they were already fated to crash at the potential re-spawn point they would then be thrust into a loop, already committed to the crash when they re-spawned. My second idea was to build an array of points along the course of the track, tracing an ideal path, each with their own individual position and rotation values and all representing relatively safe positions on the level. When the player came to a halt and my kill script was called, it would loop through all of the potential re-spawn points searching for the closest one to the point of the wreck. The user would then be catapulted from that spot with a set force, picking up the position and rotation from the re-spawn point itself. \u00a0I don&#8217;t know&#8230;it worked. That&#8217;s all that mattered.<\/p>\n<p><a title=\"Speed triggers in place over jumps in the 4th level\" href=\"\/storage\/post-images\/speed_adjusters.png\" rel=\"images\"><img style=\"width: 150px;\" src=\"\/storage\/post-images\/speed_adjusters.png\" alt=\"Speed triggers in place over jumps in the 4th level\" \/><\/a><span class=\"thumbnail-caption\" style=\"width: 150px;\">Every jump has a speed adjuster to fine-tune the gameplay<\/span><br \/>\n<br \/>My second issue was the gameplay flow. I was leaving everything up to the physics engine and the controller rig I had built, but had no real way of affecting individual portions of the level. While it was accurate, it just wasn&#8217;t that fun, and I couldn&#8217;t provide a consistent experience for the player. \u00a0I resolved this by building a speed adjusting prefab. Essentially it&#8217;s a box collider that I drape over an area of the level that acts as a trigger for a script that will in turn pick up the velocity of a rigid body moving through it and increase or decrease that velocity in accordance with a few instance variables that I set while designing the level. It will add force to the cheese wheel&#8217;s rigid body in the direction that the speed adjuster is rotated. It actually turned out better than I had hoped it would! I could now incrementally tweak every part of the level to guide the player down the slope in the way that I feel would be most exciting. Dynamically speeding them up and slowing them down in the appropriate places to add to the excitement of the game. As long as I don&#8217;t adjust the wheels velocity too abruptly, you can&#8217;t even tell that your speed is being controlled.<\/p>\n<p>Next challenge, come up with a reason for actually playing the game!<\/p>\n","excerpt":"So I was ready for my first build to the iPhone! I have to say that building to the device from Unity is ridiculously easy. Within minutes I had a working prototype running on my phone and while I was excited to see it come alive, it was also a very sobering experience realizing how much work there was left to do.\r\n","date":"2009-08-05 03:31:00","modified":"2012-03-28 16:59:09","categories":[{"id":3,"slug":"iphone-development","title":"iPhone development","description":"","parent":0,"post_count":14}],"tags":[{"id":5,"slug":"coopers-hill","title":"Coopers Hill","description":"","post_count":14},{"id":9,"slug":"ios","title":"iOS","description":"","post_count":11},{"id":10,"slug":"iphone","title":"iPhone","description":"","post_count":11},{"id":11,"slug":"unity","title":"Unity","description":"","post_count":11}],"author":{"id":1,"slug":"jeremyclewell","name":"jeremyclewell","first_name":"","last_name":"","nickname":"jeremyclewell","url":"","description":""},"comments":[],"attachments":[],"comment_count":0,"comment_status":"open"},{"id":9,"type":"blog_post","slug":"setting-to-work","url":"http:\/\/blog.jeremyclewell.com\/?blog_post=setting-to-work","status":"publish","title":"Setting to work","title_plain":"Setting to work","content":"<p><a title=\"The cheese wheel\" href=\"\/storage\/sketches3.png\" rel=\"images\"><img style=\"width: 150px;\" src=\"\/storage\/sketches3.png\" alt=\"\" \/><\/a>I began sketching out some preliminary ideas for the menus and overall aesthetic of the game. I wanted to keep it lighthearted and kind of quirky. The general concept for the game put you in the place of a wheel of cheese training for the <a href=\"http:\/\/en.wikipedia.org\/wiki\/Cooper's_Hill_Cheese-Rolling_and_Wake\" target=\"_blank\">Cooper&#8217;s Hill event<\/a>. You would be able to choose from four varieties of wheeled cheese, each having attributes that reflected the character of the cheese itself. Among the four you could choose from I included a thin, light wheel of Brie with very nimble controls and at the other end of the spectrum was a wide, dense wheel of Blue that was rather sluggish in its controls, but featured a greater top speed. A wheel of Swiss and wheel of Cheddar would then round out the selection, being placed between the Brie and Blue in their extremes. I imagined the selection process taking place in an old European deli, with the user moving from counter to counter, each holding a representation of a different cheese.<\/p>\n<p><a href=\"\/storage\/post-images\/sketches4.png\" rel=\"images\"><img style=\"width: 150px;\" src=\"\/storage\/post-images\/sketches4.png\" alt=\"\" \/><\/a>I had planned for four playable hills as well. The first would double as a training level in which the user could opt to follow a tutorial guiding them through the details of the game. \u00a0The second level would be a stylized model of Cooper&#8217;s Hill itself, taking place in the English countryside. The third would be of Bavarian origin, featuring the castle Neueshwanstien and a little German village. The fourth and final level (for now) would be modeled after the Matterhorn in the Swiss Alps. Each level would be increasingly difficult and would have to be unlocked by achieving the required score in the previous level. I had a little difficulty in deciding how to present the level selection to the user. I wanted to go with something 3D, but how could I merge four models with four entirely different appearances into one scene. I eventually decided that I would build 3D thumbnails of the hills, almost <a href=\"http:\/\/en.wikipedia.org\/wiki\/Super_deformed\" target=\"_blank\">super-deformed<\/a> versions of them, that made it look like the hill\/mountain was ripped right out of the earth and floated before you in empty space. I don&#8217;t know it this was the best way of doing it, but it was all I could come up with at the time.<\/p>\n<p><a href=\"\/storage\/post-images\/sketches2.png\" rel=\"images\"><img style=\"width: 150px;\" src=\"\/storage\/post-images\/sketches2.png\" alt=\"\" \/><\/a>I first began fleshing out the second level, Cooper&#8217;s hill, figuring that it would be the most iconic and set the tone for the rest of the game. What I had not planned for was the difficulty associated with level design. I began with a single plane and then continued extruding and tweaking edges one by one to provide me with a relatively low poly mesh. The most arduous aspect of this process was the testing. Every few polygons I&#8217;d jump back over to Unity and see how the cheese wheel reacted to my additions to the model. If two planes terminated at too severe of an angle it would jolt my wheel to a near stop, but if the angle was too obtuse my wheel would become airborne when I didn&#8217;t want it to be. This was absolutely the most time consuming part of my entire experience developing for the iPhone, and I&#8217;m still not sure if I got it right. I now have a lot of respect for people who do this for a living. Nonetheless, within about a week I had a playable hill.<\/p>\n<p>For the longest time I couldn&#8217;t figure out why my vertex count was so high on my imported model within Unity in comparison to the model in Blender. If the hill consisted of 3,500 vertices when modeled, Unity would report that it was rendering out close to ten thousand. This was not at all acceptable and I was really beginning to worry that I wouldn&#8217;t be able to add the level of complexity that I wanted to the models. At this point I still had not textured anything and it entirely slipped my mind that I was using lights within my Unity scene to illuminate my model while testing it. I knew that lighting my models in realtime would drastically hurt my performance, but I didn&#8217;t know it would have the effect of doubling my vertex count. I went back to my model in Blender and built out UV maps for the mesh, then baked an ambient occlusion render to a jpeg and applied that to the model in Unity. Now I didn&#8217;t need lighting to see my models and with no active lights in my scene my vertex count dropped down to the value I was expecting to see. Hurray! I figured I was ready to build to the iPhone for the first time and see how this thing ran.<\/p>\n","excerpt":"I began sketching out some preliminary ideas for the menus and overall aesthetic of the game. I wanted to keep it lighthearted and kind of quirky. The general concept for the game put you in the place of a wheel of cheese training for the Cooper's Hill event.\r\n","date":"2009-07-29 03:00:00","modified":"2012-03-28 16:56:19","categories":[{"id":3,"slug":"iphone-development","title":"iPhone development","description":"","parent":0,"post_count":14}],"tags":[{"id":5,"slug":"coopers-hill","title":"Coopers Hill","description":"","post_count":14},{"id":9,"slug":"ios","title":"iOS","description":"","post_count":11},{"id":10,"slug":"iphone","title":"iPhone","description":"","post_count":11},{"id":11,"slug":"unity","title":"Unity","description":"","post_count":11}],"author":{"id":1,"slug":"jeremyclewell","name":"jeremyclewell","first_name":"","last_name":"","nickname":"jeremyclewell","url":"","description":""},"comments":[],"attachments":[],"comment_count":0,"comment_status":"open"},{"id":8,"type":"blog_post","slug":"thanks-you-blender","url":"http:\/\/blog.jeremyclewell.com\/?blog_post=thanks-you-blender","status":"publish","title":"Thank you Blender!","title_plain":"Thank you Blender!","content":"<p>I now had a basic idea of what my game was to be, but before I put any time into design I thought I should come up with a proof of concept. A working prototype should be my first step, in an effort to both congeal some of my thoughts as to how the game might play and also to cast light on any technical roadblocks that I might encounter later in development. I was in the most part successful, with only one misstep that I&#8217;ll talk about in a later post.<\/p>\n<p><img src=\"\/storage\/post-images\/blender-socket.png\" alt=\"\" \/>I&#8217;ve been using the 3D modeling, animation and all around phenomenal design tool <a title=\"Blender Homepage\" href=\"http:\/\/www.blender.org\/\" target=\"_blank\">Blender<\/a> for about 3 years now. I cannot lay enough praise on Blender. It is in my opinion the shining star of the open source world. The development community is very active and they continue to provide us common users with an application that offers\u00a0professional\u00a0features, a great UI and a level of polish that is not often seen in open-source software (it feels like I should have spent a lot of money on it). Additionally, Unity recognizes the Blender file format and imports projects directly from the original Blender save file, meaning no importing\/exporting necessary. \u00a0On top of all of that, it&#8217;s a lot of fun to work with once you get up to speed with it. That being said, Blender was the obvious choice for me to build and texture my models, especially since I&#8217;m working with a budget of $0 for this project.<\/p>\n<p>I wanted to rely heavily upon the physics engine in Unity, to off-put as much of the heavy lifting as I could. I built my test models, a smoothed cylinder for the cheese wheel and a simple plane that had been extruded in one direction an put on an angle to act as the hill. I cracked open these models in Unity and set to work trying to rig a control system that would feel like you were really rolling a wheel of cheese down a hill.<\/p>\n<p>I had been warned that using mesh colliders in iPhone projects was a bad idea, that they eat up a chunk of cycles during your physics time step and that they often become unreliable at high speeds, with objects passing right through them. Unfortunately rigging the organic form of the hills I was planning to generate with simple box colliders, well, it would have gotten real messy, real quick. I bit the bullet and attached mesh colliders to both the hill and the cheese wheel meshes, then started limiting movement and rotation on certain local axis&#8217;s of the cheese wheel, trying to keep the wheel upright and moving, while controlling it&#8217;s local Y axis rotation with input from either my keyboard or the X axis if my iPhone. This worked in theory, but no amount of tweaking would generate a simulation that felt natural. \u00a0I began to look for other possible solutions. The first thing that came to mind was Unity&#8217;s wheel collider, but after some research I dismissed the idea of using it. I wasn&#8217;t simulating a car wheel after all&#8230;acceleration, breaking torque, a suspension system and the division between forward and lateral friction would have all been unnecessary overhead. I opted to keep my cheese wheel as a simple rigidbody and mesh collider pair and then place a box collider on either side of the wheel itself and let gravity and the interactions between all three of these colliders provide me with the steering rig.<\/p>\n<p><a title=\"Collider rig in place\" href=\"\/storage\/control_rig_1.png\" rel=\"images\"><img style=\"width: 150px;\" src=\"\/storage\/control_rig_1.png\" alt=\"\" \/><\/a><span style=\"width: 150px;\">Collider rig in place around the player wheel.<\/span><\/p>\n<p>I would update the position of the box colliders every frame in respect to the cheese wheel itself and rotate the box colliders as a unit to affect steering of the wheel. Additionally, I could then rotate the game object that contained all of the colliders and the cheese wheel mesh itself along its local Z axis to tilt the wheel inwards as it turned. If the player crashed into a barn or his speed dropped below the amount needed to keep the wheel upright, I would simply remove the box colliders on either side of the wheel and I&#8217;d be left with a very natural simulation of the wheel tumbling to a stop.<\/p>\n<p><a title=\"Proof of Concept\"><img src=\"\/storage\/post-images\/proofOfConceptTN.jpg\" alt=\"\" \/><\/a><span style=\"width: 150px;\">My first proof of concept<\/span><\/p>\n<p>I was happy with this. It was simple and put most of the work in the hands of the physics engine, while still exposing enough control to tweak the simulation for different situations. Best of all, it felt real. The only concern I had was that you could still turn the wheel while it was in mid-air. For now this was the best solution. I&#8217;d attack the mid-air steering problem at a later date&#8230;I was anxious to come up with a design aesthetic for the game and start building a few levels to really see how it played.<\/p>\n","excerpt":"I now had a basic idea of what my game was to be, but before I put any time into design I thought I should come up with a proof of concept. A working prototype should be my first step, in an effort to both congeal some of my thoughts as to how the game might play and also to cast light on any technical roadblocks that I might encounter later in development.\r\n","date":"2009-07-26 00:32:00","modified":"2012-03-28 16:54:14","categories":[{"id":3,"slug":"iphone-development","title":"iPhone development","description":"","parent":0,"post_count":14}],"tags":[{"id":5,"slug":"coopers-hill","title":"Coopers Hill","description":"","post_count":14},{"id":9,"slug":"ios","title":"iOS","description":"","post_count":11},{"id":10,"slug":"iphone","title":"iPhone","description":"","post_count":11},{"id":11,"slug":"unity","title":"Unity","description":"","post_count":11}],"author":{"id":1,"slug":"jeremyclewell","name":"jeremyclewell","first_name":"","last_name":"","nickname":"jeremyclewell","url":"","description":""},"comments":[],"attachments":[],"comment_count":0,"comment_status":"open"},{"id":7,"type":"blog_post","slug":"enter-unity","url":"http:\/\/blog.jeremyclewell.com\/?blog_post=enter-unity","status":"publish","title":"Enter Unity","title_plain":"Enter Unity","content":"<p>I had discovered\u00a0<a title=\"Unity3D Homepage\" href=\"http:\/\/unity3d.com\/\" target=\"_blank\">Unity3D<\/a>\u00a0a few months back, but had never given it any serious consideration. I was frantically working on a Flex based <a title=\"Good2BMe Website\" href=\"http:\/\/www.jeremyaustinclewell.com\/projects\/ibx\/good2bme\/main.html\" target=\"_blank\">website<\/a> at work that made heavy use of the <a title=\"Papervision's Blog\" href=\"http:\/\/blog.papervision3d.org\/\" target=\"_blank\">Papervision 2.0 alpha<\/a>\u00a0library and felt any future I had working with 3D would most likely be web based and utilize the Adobe Flash Runtime. OpenGL programming at this point was nothing more than a dream to me&#8230;really, it still just is.<br \/>\n<a href=\"http:\/\/www.unity3d.com\" target=\"_blank\"><img src=\"\/storage\/post-images\/unity_logo.png\" alt=\"\" \/><\/a><br \/>\nUnity then launched their iPhone development tool, deftly named Unity iPhone and it blew me away. It would effectively fill the gaps in my 3D programming experience and allowed me, just a single developer, to focus on aspects of the development process that I was more familiar with. Additionally, all game logic in Unity is written in C#, Boo (a subset of Python), or Javascript, which is then compiled down to Objective C to run on the iPhone itself. This simplified the task before me to such an extent that I immediately purchased a license and began familiarizing myself with the tool and the scripting API. All that was needed now was a concept.<\/p>\n<p>Originally I thought about building a space shooter. I have always been a fan of flight sims and at this point no one had built anything for the iPhone that really met my expectations (my fianc\u00e9 and I were also huge <a title=\"Battlestar Galactica\" href=\"http:\/\/www.syfy.com\/battlestar\/\" target=\"_blank\">BSG<\/a> fans, I can&#8217;t say that it didn&#8217;t provide some inspiration). I went so far as to put together a small prototype and began working on scripts to handle <a href=\"http:\/\/www.red3d.com\/cwr\/steer\/gdc99\/\" target=\"_blank\">steering behavior<\/a> and enemy AI. \u00a0I read <a href=\"http:\/\/www.amazon.com\/Programming-Game-Example-Mat-Buckland\/dp\/1556220782\" target=\"_blank\">Programming Game Ai by Example<\/a>\u00a0from cover to cover and thought I had a pretty good shot at creating something fun and involving. I then began to put more thought into the amount of content I&#8217;d have to generate and the project began to become much more daunting. Story lines, character portraits, cut scenes and a whole armada of custom modeled and textured ships converged to become a mountain of work before me. After some consideration I decided to scale back and try to create something that would rely more upon unique gameplay and tools that were already provided with Unity, namely the <a href=\"http:\/\/unity3d.com\/unity\/features\/physics\" target=\"_blank\">Ageia PhysX<\/a>\u00a0physics engine. Everybody likes physics <img src='http:\/\/blog.jeremyclewell.com\/wp-includes\/images\/smilies\/icon_smile.gif' alt=':)' class='wp-smiley' \/> <\/p>\n<p>Some months before I had stumbled upon a curious <a title=\"Cheese rolling in Glouchestershire, England\" href=\"http:\/\/www.cheese-rolling.co.uk\/\" target=\"_blank\">sporting event<\/a>, if you can call it that, that takes place every year in Glouchestershire, England. From the top of Cooper&#8217;s Hill, just outside of town, a wheel of cheese is lobbed down the ridiculously steep incline and the more courageous of the attendees throw themselves down the hill after it, the winner being the first to reach the bottom in one piece. It&#8217;s a footrace, but most of the racing is actually a chaotic tumble head over heals and every year results in a number if bruised bodies, but none the less, it&#8217;s a spectacle that burns itself into one&#8217;s memory. This has apparently been going on for centuries, but achieved recent fame with the help of onlooker&#8217;s postings on YouTube. You can check out a video <a class=\"videoLinkBox\" title=\"Cooper's Hill Cheese Rolling\" href=\"http:\/\/www.youtube.com\/v\/KOyQBSMeIhM&amp;hl=en_US&amp;fs=1&amp;rel=0\">here<\/a>.<\/p>\n<p>My hope was that I could rig a simple control system, model a few wheels of cheese and a few hills to race them down and ta-da, I&#8217;d have a quirky, fun physics simulation that filled an eclectic niche of the gaming market, separating me from some of the more traditional gaming models. Additionally, with any luck, there would be enough of a residual memory among those who had stumbled across the videos of the actual event on YouTube to piqu\u00e9 there curiosity and maybe drive some initial sales when the app launched. So that was it, I had my game! I&#8217;d call it &#8220;Cooper&#8217;s Hill&#8221;, and all that was left was to build it.<\/p>\n","excerpt":"I had discovered Unity3D a few months back, but had never given it any serious consideration. I was frantically working on a Flex based website at work that made heavy use of the Papervision 2.0 alpha library and felt any future I had working with 3D would most likely be web based and utilize the the Adobe Flash Runtime. OpenGL programming at this point was nothing more than a dream to me...really, it still just is.\r\n","date":"2009-07-22 19:33:00","modified":"2012-03-28 16:53:00","categories":[{"id":3,"slug":"iphone-development","title":"iPhone development","description":"","parent":0,"post_count":14}],"tags":[{"id":5,"slug":"coopers-hill","title":"Coopers Hill","description":"","post_count":14},{"id":9,"slug":"ios","title":"iOS","description":"","post_count":11},{"id":10,"slug":"iphone","title":"iPhone","description":"","post_count":11},{"id":11,"slug":"unity","title":"Unity","description":"","post_count":11}],"author":{"id":1,"slug":"jeremyclewell","name":"jeremyclewell","first_name":"","last_name":"","nickname":"jeremyclewell","url":"","description":""},"comments":[],"attachments":[],"comment_count":0,"comment_status":"open"},{"id":6,"type":"blog_post","slug":"how-it-all-began","url":"http:\/\/blog.jeremyclewell.com\/?blog_post=how-it-all-began","status":"publish","title":"How it all began&#8230;","title_plain":"How it all began&#8230;","content":"<p>First postings on a new blog are always the most difficult. I think a brief introduction of who I am and why I&#8217;m writing this is as good a place to start as any, so here goes. My name is Jeremy Clewell. I&#8217;m lead developer for the multimedia department of a large health insurance company here in Philadelphia, Pennsylvania. I spend most of my time developing client side web apps using Flex and Flash, but I dabble in a number of interpreted languages, as well as handle a lot of our design and video production needs. I am a neophile to the Nth degree, which occasionally gets me into trouble, but the explorations are usually worth the risk <img src='http:\/\/blog.jeremyclewell.com\/wp-includes\/images\/smilies\/icon_wink.gif' alt=';)' class='wp-smiley' \/> <\/p>\n<p><img src=\"\/storage\/post-images\/Philly.png\" alt=\"\" \/><span class=\"thumbnail-caption\" style=\"width: 450px;\">My hometown<\/span><br \/>\n<br \/>I was an early adopter of the iPhone back in 2007 and was enthralled with the idea of developing for the platform since day one. Back in November of that year I attended the Apple Tech Talks for building web apps on the iPhone, but without Flash support and poor performance using the <a href=\"http:\/\/en.wikipedia.org\/wiki\/Canvas_element\">Javascript Canvas<\/a> object I didn&#8217;t have much hope for starting anything that I could really sink my teeth into. Then came the iPhone SDK. I immediately downloaded all the Objective-C documentation that I could find and started toying around with some ideas for an application.<\/p>\n<p><img style=\"width: 150px;\" src=\"\/storage\/post-images\/Renee1.jpg\" alt=\"\" \/><span style=\"width: 150px;\">My lovely fianc\u00e9 Ren\u00e9e <\/span><br \/>\n<br \/>Around the same time that the SDK was released I met a girl named Ren\u00e9e. We started dating and my life became infinitely more complex and I watched as my free time evaporated before my eyes&#8230;but all for the better. Over the next year the relationship evolved into something much more serious and on December 6th of 2008 I proposed to her. We began looking at our finances hoping that we&#8217;d be able to afford a wedding within a year or so, but realizing that it would be nearly impossible to pull off I began searching for ways to augment my income.<\/p>\n<p>The iTunes app store was just now really beginning to come into its own. The iPhone was becoming a legitimate gaming platform and success stories of independent developers annealing their fiscal futures were peppering the pages of reddit.com on a daily basis. I never had any real hope of breaking the bank, but I won&#8217;t lie, the idea of having our wedding funded entirely by an app I wrote for the iPhone was an alluring one indeed. Now I just needed to become fluent in Objective-C, familiarize myself with the SDK, learn OpenGL ES, find a physics engine that I could\u00a0actually <a href=\"http:\/\/en.wikipedia.org\/wiki\/Grok\">grok<\/a> and most importantly, come up with an idea that might sell. Hmmm&#8230;<\/p>\n","excerpt":"First postings on a new blog are always the most difficult.","date":"2009-07-08 17:48:00","modified":"2012-03-28 16:51:05","categories":[{"id":3,"slug":"iphone-development","title":"iPhone development","description":"","parent":0,"post_count":14}],"tags":[{"id":5,"slug":"coopers-hill","title":"Coopers Hill","description":"","post_count":14},{"id":9,"slug":"ios","title":"iOS","description":"","post_count":11},{"id":10,"slug":"iphone","title":"iPhone","description":"","post_count":11},{"id":11,"slug":"unity","title":"Unity","description":"","post_count":11}],"author":{"id":1,"slug":"jeremyclewell","name":"jeremyclewell","first_name":"","last_name":"","nickname":"jeremyclewell","url":"","description":""},"comments":[],"attachments":[],"comment_count":0,"comment_status":"open"}]}